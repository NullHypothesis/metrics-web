<?xml version="1.0"?>

<!DOCTYPE project [
       <!ENTITY base SYSTEM "src/build/java/base.xml">
]>

<project default="usage" name="metrics-web" basedir=".">

  <property name="javadoc-title" value="MetricsWeb API Documentation"/>
  <property name="implementation-title" value="metrics-web" />
  <property name="release.version" value="1.0.0-dev" />
  <property name="metricslibversion" value="2.1.1" />
  <property name="jetty.version" value="-9.2.21.v20170120" />
  <property name="warfile"
            value="metrics-web-${release.version}.war"/>

  <property name="name" value="metrics-web"/>

  <property name="project-main-class"
            value="org.torproject.TBD" />
  <property name="additional2sign" value="${warfile}" />
  <property name="tardepends" value="war" />

  <property name="Rsources" value="${basedir}/src/main/R" />
  <property name="pysources" value="${basedir}/src/main/python" />

  <!-- Deployment base folder.
       Be aware that this is also set in R scripts and web.xml, currently! -->
  <property name="metrics-web.deployment.base"
            value="/srv/metrics.torproject.org/metrics" />

  <!-- The coverage needs to be improved! -->
  <target name="coverage-check">
    <cobertura-check totallinerate="0" totalbranchrate="0" >
      <!-- example regexes
      <regex pattern="org.torproject.abc.xyz.*"
             branchrate="87" linerate="73"/>
      -->
    </cobertura-check>
  </target>

  <patternset id="common" >
    <include name="commons-codec-1.10.jar"/>
    <include name="commons-lang3-3.5.jar"/>
    <include name="commons-lang-2.6.jar"/>
    <include name="gson-2.4.jar" />
    <include name="logback-core-1.1.9.jar" />
    <include name="logback-classic-1.1.9.jar" />
    <include name="postgresql-9.4.1212.jar"/>
    <include name="REngine.jar"/>
    <include name="Rserve.jar"/>
    <include name="slf4j-api-1.7.22.jar"/>
  </patternset>

  <patternset id="library" >
    <patternset refid="common" />
    <include name="metrics-lib-${metricslibversion}.jar"/>
    <include name="commons-compress-1.13.jar"/>
    <include name="servlet-api-3.1.jar"/>
    <include name="xz-1.6.jar"/>
  </patternset>

  <patternset id="runtime" >
    <patternset refid="library" />
  </patternset>

  <target name="generate-ml-javadoc" depends="submoduleupdate" >
    <mkdir dir="${basedir}/src/submods/metrics-lib/lib" />
    <exec executable="ant"
          dir="${basedir}/src/submods/metrics-lib"
          failonerror="true" >
      <arg value="clean" />
      <arg value="docs" />
    </exec>
  </target>

  <!-- This can be adapted to point at the actual deployment path. -->
  <property name="prepare.deployment" value="${basedir}/generated" />

  <!-- Don't alter the following. -->
  <property name="modulebase" value="${prepare.deployment}/modules" />

  <!-- Operational tasks. -->
  <target name="collectdescs" >
    <property name="module.name" value="collectdescs" />
    <antcall target="run-java" />
  </target>

  <target name="connbidirect" >
    <property name="module.name" value="connbidirect" />
    <antcall target="run-java" />
  </target>

  <target name="onionperf" >
    <property name="module.name" value="onionperf" />
    <antcall target="run-java" />
  </target>

  <!-- Provides legacy.config file from template. -->
  <target name="legacy-create-config" >
    <copy file="${resources}/legacy.config.template"
          tofile="${basedir}/legacy.config"/>
  </target>

  <!-- Expects legacy.config file in the base directory. -->
  <target name="legacy" >
    <property name="module.name" value="legacy" />
    <property name="localmoddir" value="${modulebase}/${module.name}" />
    <property name="statsdir"
              value="${localmoddir}/stats" />
    <mkdir dir="${statsdir}" />

    <copy file="${basedir}/legacy.config"
          tofile="${localmoddir}/config"/>

    <antcall target="run-java">
      <param name="module.main"
             value="org.torproject.ernie.cron.Main" />
    </antcall>

    <exec executable="psql"
          dir="${localmoddir}"
          failonerror="true" >
      <arg value="--dbname=tordir"/>
      <arg value="-c SELECT * FROM refresh_all();" />
    </exec>

    <exec executable="psql"
          dir="${localmoddir}"
          failonerror="true" >
      <arg value="-c COPY (SELECT * FROM stats_servers) TO STDOUT WITH CSV HEADER;" />
      <arg value="--dbname=tordir"/>
      <arg value="--output=${statsdir}/servers.csv" />
    </exec>

    <exec executable="psql"
          dir="${localmoddir}"
          failonerror="true" >
      <arg value="-c COPY (SELECT * FROM stats_bandwidth) TO STDOUT WITH CSV HEADER;" />
      <arg value="--dbname=tordir"/>
      <arg value="--output=${statsdir}/bandwidth.csv" />
    </exec>
  </target>

  <target name="advbwdist">
    <property name="module.name" value="advbwdist" />
    <antcall target="run-java" />
    <antcall target="run-R" >
      <param name="module.Rscript" value="aggregate.R" />
    </antcall>
  </target>

  <target name="hidserv" >
    <property name="module.name" value="hidserv" />
    <antcall target="run-java" />
  </target>

  <target name="webstats" >
    <property name="module.name" value="webstats" />
    <property name="rdatadir" value="${modulebase}/${module.name}/RData" />
    <mkdir dir="${rdatadir}" />

    <antcall target="run-java" />
    <antcall target="run-R" >
      <param name="module.Rscript" value="write-RData.R" />
    </antcall>
  </target>

  <target name="run-rserver">
    <exec executable="R"
          dir="${Rsources}/rserver"
          failonerror="true" >
      <arg value="CMD"/>
      <arg value="Rserve" />
      <arg value="--no-save" />
      <arg value="--quiet" />
      <arg value="--RS-conf" />
      <arg value="Rserv.conf" />
    </exec>
  </target>

  <!-- Support tasks for operation -->
  <target name="run-java">
    <echo message="Running java module ${module.name} ... " />
    <available file="${dist}/${jarfile}" property="have.jar"/>
    <fail unless="have.jar" message="Please run 'ant jar' first."/>
    <condition property="mainclass"
               value="${module.main}"
               else="org.torproject.metrics.${module.name}.Main" >
      <isset property="module.main"/>
    </condition>
    <property name="workingdir" value="${modulebase}/${module.name}" />
    <mkdir dir="${workingdir}" />
    <java dir="${workingdir}"
          fork="true"
          maxmemory="2g"
          classname="${mainclass}">
      <classpath>
        <pathelement location="${dist}/${jarfile}"/>
        <pathelement location="${resources}"/>
      </classpath>
      <jvmarg value="-DLOGBASE=../logs"/>
    </java>
  </target>

  <target name="run-R" >
    <echo message="Running R module ${module.name}, script ${module.Rscript} ... " />
    <property name="Rscript"
              value="${Rsources}/${module.name}/${module.Rscript}" />
    <exec executable="R"
          dir="${modulebase}/${module.name}"
          failonerror="true" >
      <arg value="--slave"/>
      <arg value="-f"/>
      <arg value="${Rscript}" />
    </exec>
  </target>

  <!-- The following line adds the common targets and properties
       for Metrics' Java Projects.
  -->
  &base;

</project>

