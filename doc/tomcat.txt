Dynamic graphs prototype based on Apache Tomcat 5.5
===================================================

ERNIE lacks a way to dynamically generate graphs based on user input. It
would be desirable, e.g., to change the displayed date interval or further
break down data by certain criteria. These functions cannot be implemented
(easily) with the current approach of hourly generated graphs and a static
website.

This prototype uses Java Servlets deployed in a Tomcat web container in
combination with an external R process to generate graphs on demand. Note
that the prototype is still very limited in functionality.


Development
-----------

The following files are relevant for developing the prototype:

- src/org/torproject/ernie/web/NetworkSizeServlet.java creates the web
  page containing a generated graph and controls for customization.
- src/org/torproject/ernie/web/ImageServlet.java generates and returns
  a graph as PNG file.
- R/consensus.R contains the R code for generating a network size graph
  with configurable date interval length.
- lib/servlet-api.jar contains the class files required for compiling
  servlets (copied from remote Tomcat 5.5 installation).
- etc/web.xml is the deployment descriptor.
- dist/ is the temporary directory used for generating the web archive.
- build.xml has a "tomcat" target that can be used to compile and package
  the prototype for deployment.
- doc/tomcat.txt is this file that should be kept updated while the
  prototype evolves (and should turn into a real documentation once the
  prototype is ready for prime time).


Deployment
----------

Deploying the prototype is straightforward and requires minimal changes on
the target system.

- /var/lib/tomcat5.5/webapps/ on the target system should be writable for
  the developer.
- A recent stats/consensus-stats file needs to be uploaded to /tmp/ on the
  target system.

Actual deployment consists of two steps: packaging a web archive and
uploading it to the target system:

  $ ant tomcat && scp ernie.war <server>:/var/lib/tomcat5.5/webapps/

(It is assumed here that Tomcat auto-deploys web applications in its
webapps/ directory, which it does in the default Debian configuration.)

The example web page is then available under

  http://<server>:<port>/ernie/networksize.html

The included PNG file can also be requested directly, with or without
parameters

  http://<server>:<port>/ernie/graphs/networksize.png
  http://<server>:<port>/ernie/graphs/networksize.png?xaxis=180d

